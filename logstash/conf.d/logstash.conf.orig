#Use 'lfattr /path/to/filename' to view ansible_managed string

input {
  beats {
    port => 5044
  }
  tcp {
    port => 5555
    codec => json_lines
  }
}

filter {
  if [log_type] == "cronjob" {
    grok {
      match => [
        "message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA}(?:\[%{POSINT:cronjob_pid}\])?: %{GREEDYDATA:cronjob_message}"
      ]
    }
  }
  if [log_type] == "nginx_error" {
    grok {
      match => [
        "message", "%{DATESTAMP:log_timestamp} %{DATA} client: %{IPV4:client_ip}, %{DATA} [host: \"%{HOSTNAME:http_host}\"|%{DATA}]"
      ]
    }
  }
  else if [log_type] == "ats_error" {
    grok {
      match => [
        "message", "%{DATA:log_timestamp} %{DATA}"
      ]
    }
    mutate {
      gsub => [
        "log_timestamp", "[\.hms]", ""
      ]
    }
  }
# deleted fragment pd
#
  mutate {
    add_field => [ "received_at", "%{@timestamp}" ]
  }
  date {
    match => [ "log_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "dd/MMM/YYYY:HH:mm:ss Z", "YY/MM/dd HH:mm:ss", "YYYY-MM-dd HH:mm:ss.SSS", "ISO8601", "YYYYMMddHHmmss" ]
    target => "@timestamp"
    locale => "en"
    add_tag => [ "tmatch" ]
  }
  mutate {
    add_field => [ "region", "us_east_1" ]
    add_field => [ "vpc", "dev" ]
    remove_field => [ "input_type" ]
    remove_field => [ "log_timestamp" ]
    gsub => [
      "host", "ip-", "",
      "host", "-", "."
      ]
  }
  ruby {
    code => "event['latency_receiving'] = Time.iso8601(event['received_at'].to_s).to_f - Time.iso8601(event['@timestamp'].to_s).to_f"
  }
  ruby {
    code => "event['latency_processing'] = Time.now().to_f - Time.iso8601(event['received_at'].to_s).to_f"
  }
}

output {
  elasticsearch {
    hosts => "search-logging53-kapfvpvivflrnccxvmbec27lii.us-east-1.es.amazonaws.com:80"
    manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
    workers => 4
  }
  statsd {
    increment => [
      "%{log_type}"
    ]
  }
  statsd {
    timing => {
      "latency_receiving" => "%{latency_receiving}"
      "latency_processing" => "%{latency_processing}"
    }
  }
}
